# OpenBSD pkg_*
if [ -d /var/db/pkg ]; then
	PKG_LIST=$(ls -1 /var/db/pkg)
	set -A complete_pkg_delete -- $PKG_LIST
	set -A complete_pkg_info -- $PKG_LIST

	set -A complete_pkg_1 -- add check create delete info
	set -A complete_pkg_2 -- $PKG_LIST
fi

# ssh, scp, mosh
set -A SSH_KNOWN_HOSTS ~/.ssh/known_hosts

if [ -f /etc/ssh/ssh_known_hosts ]; then
	SSH_KNOWN_HOSTS="${SSH_KNOWN_HOSTS[@]} /etc/ssh/ssh_known_hosts"
fi

HOST_LIST=$(awk \
	'{split($1,a,","); gsub("].*", "", a[1]); gsub("\\[", "", a[1]); print a[1] " root@" a[1]}' \
		$SSH_KNOWN_HOSTS | sort | uniq)

set -A complete_ssh -- $HOST_LIST
set -A complete_scp -- $HOST_LIST
set -A complete_mosh -- $HOST_LIST
# / ssh, scp, mosh

pgrep -fq '/usr/sbin/vmd'
if [ $? = 0 ]; then
	set -A complete_vmctl -- console load reload start stop reset status send receive
	set -A complete_vmctl_2 -- $(vmctl status | awk '!/NAME/{print $NF}')
fi

if [ -x /usr/rbin/rcctl ]; then
	set -A complete_rcctl_1 -- disable enable get ls order set restart start stop
	set -A complete_rcctl_2 -- $(rcctl ls all)
fi

function reload_completions {
	if [ -e ~/.ksh_completions ]; then
		. ~/.ksh_completions
		echo "ksh completions reloaded"
	fi
}
